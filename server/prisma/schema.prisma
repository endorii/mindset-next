generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  username        String
  email           String           @unique
  password        String
  phone           String
  shippingAddress ShippingAddress?
  cart            CartItem[]
  favorites       Favorite[]
  createdAt       DateTime         @default(now()) @map("created_at")
}

model ShippingAddress {
  id         String @id @default(cuid())
  user       User   @relation(fields: [userId], references: [id])
  userId     String @unique @map("user_id")
  recipient  String
  country    String
  region     String
  city       String
  postalCode String @map("postal_code")
  street     String
  building   String
  apartment  String
}

model Product {
  id          String         @id @default(cuid())
  name        String
  path        String         @unique
  price       Int
  available   Boolean
  description String
  composition String
  category    Category       @relation(fields: [categoryId], references: [id])
  categoryId  String         @map("category_id")
  images      ProductImage[]
  sizes       ProductSize[]
  types       ProductType[]
  colors      ProductColor[]
  cartItems   CartItem[]
  favorites   Favorite[]
  createdAt   DateTime       @default(now()) @map("created_at")
}

model ProductImage {
  id        String  @id @default(cuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}

model ProductSize {
  id        String  @id @default(cuid())
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}

model ProductType {
  id        String  @id @default(cuid())
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}

model ProductColor {
  id        String  @id @default(cuid())
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}

model CartItem {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @map("user_id")
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
  quantity  Int
  size      String
  color     String
}

model Category {
  id           String     @id @default(cuid())
  name         String
  path         String
  banner       String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String     @map("collection_id")
  products     Product[]
  createdAt    DateTime   @default(now()) @map("created_at")
}

model Collection {
  id         String     @id @default(cuid())
  name       String
  path       String     @unique
  banner     String
  categories Category[]
  createdAt  DateTime   @default(now()) @map("created_at")
}

model Favorite {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @map("user_id")
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")
}
